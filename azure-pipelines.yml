variables:  
  YARN_CACHE_FOLDER: $(Pipeline.Workspace)/yarn-cache

stages:
- stage: initcache
  jobs:
  - job:
    strategy:
      matrix:
        linux:
          VM_IMAGE: ubuntu-16.04
        windows:  
          VM_IMAGE: vs2017-win2016
        macOS:
          VM_IMAGE: macOS-10.13
    pool:
      vmImage: $(VM_IMAGE)
    steps:
    - script: yarn --frozen-lockfile
      displayName: 'Run yarn'

    - task: PublishPipelineArtifact@0
      inputs:
        targetPath: '$(YARN_CACHE_FOLDER)'
        artifactName: 'yarn-$(Agent.OS)'
      displayName: Publish yarn cache artifact

- stage: testcache
  jobs:
  - job: yarncache
    strategy:
      matrix:
        linux:
          VM_IMAGE: ubuntu-16.04
        windows:  
          VM_IMAGE: vs2017-win2016
        macOS:
          VM_IMAGE: macOS-10.13
    pool:
      vmImage: $(VM_IMAGE)
    steps:
    - task: DownloadPipelineArtifact@1
      inputs:
        artifactName: 'yarn-$(Agent.OS)'
        targetPath: '$(YARN_CACHE_FOLDER)'
    
    - script: yarn --frozen-lockfile
      displayName: 'Run yarn'
