stages:
- stage: init
  jobs:
  - job: initcache
    strategy:
      matrix:
        # linux:
        #   VM_IMAGE: ubuntu-16.04
        windows:  
          VM_IMAGE: vs2017-win2016
        # macOS:
        #   VM_IMAGE: macOS-10.13
    pool:
      vmImage: $(VM_IMAGE)
    variables:  
      YARN_CACHE_FOLDER: $(Pipeline.Workspace)/yarn-cache
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: 10.x
      displayName: 'Install Node 10.x'

    - bash: yarn config set registry https://registry.npmjs.org/ --global

    - script: yarn --version
    - script: yarn --frozen-lockfile
      displayName: 'Run yarn'

    - task: PublishPipelineArtifact@0
      inputs:
        targetPath: '$(YARN_CACHE_FOLDER)'
        artifactName: 'yarn-$(VM_IMAGE)'
      displayName: Publish yarn cache artifact

    - script: tar -cf yarn-cache.tar ../yarn-cache
    - script: tar -tvf yarn-cache.tar

    - task: PublishPipelineArtifact@0
      inputs:
        targetPath: 'yarn-cache.tar'
        artifactName: 'yarn-$(VM_IMAGE)-tar'
      displayName: Publish yarn cache artifact

- stage: test
  jobs:
  - job: testcache_tar
    strategy:
      matrix:
        # linux:
        #   VM_IMAGE: ubuntu-16.04
        windows:  
          VM_IMAGE: vs2017-win2016
        # macOS:
        #   VM_IMAGE: macOS-10.13
    pool:
      vmImage: $(VM_IMAGE)
    variables:  
      YARN_CACHE_FOLDER: $(Pipeline.Workspace)/yarn-cache
    steps:
    - powershell: curl http://download.microsoft.com/download/0/1/C/01CC78AA-B53B-4884-B7EA-74F2878AA79F/adk/adksetup.exe -o adksetup.exe
    - script: |
        start /wait adksetup.exe /quiet /features OptionId.WindowsPerformanceToolkit
        del /q adksetup.exe
        mkdir c:\tracetmp
        "C:\Program Files (x86)\Windows Kits\10\Windows Performance Toolkit\wpr.exe" -start GeneralProfile -filemode -recordtempto c:\tracetmp
        "C:\Program Files (x86)\Windows Kits\10\Windows Performance Toolkit\wpr.exe" -status

    - task: DownloadPipelineArtifact@1
      inputs:
        artifactName: 'yarn-$(VM_IMAGE)-tar'
        targetPath: '$(YARN_CACHE_FOLDER)'

    - script: |
        echo ON
        dir
        cd ..
        dir 
        cd yarn-cache
        dir
        tar -xf yarn-cache.tar
    
    - task: NodeTool@0
      inputs:
        versionSpec: 10.x
      displayName: 'Install Node 10.x'

    - bash: yarn config set registry https://registry.npmjs.org/ --global

    - script: yarn --version
    - script: yarn --frozen-lockfile
      displayName: 'Run yarn'

    - script: |
        mkdir trace
        "C:\Program Files (x86)\Windows Kits\10\Windows Performance Toolkit\wpr.exe" -stop trace\trace.etl
    - task: PublishPipelineArtifact@0
      inputs:
        artifactName: 'trace-tar-$(VM_IMAGE)'
        targetPath: 'trace'

  - job: testcache
    strategy:
      matrix:
        # linux:
        #   VM_IMAGE: ubuntu-16.04
        windows:  
          VM_IMAGE: vs2017-win2016
        # macOS:
        #   VM_IMAGE: macOS-10.13
    pool:
      vmImage: $(VM_IMAGE)
    variables:  
      YARN_CACHE_FOLDER: $(Pipeline.Workspace)/yarn-cache
    steps:
    - powershell: curl http://download.microsoft.com/download/0/1/C/01CC78AA-B53B-4884-B7EA-74F2878AA79F/adk/adksetup.exe -o adksetup.exe
    - script: |
        start /wait adksetup.exe /quiet /features OptionId.WindowsPerformanceToolkit
        del /q adksetup.exe
        mkdir c:\tracetmp
        "C:\Program Files (x86)\Windows Kits\10\Windows Performance Toolkit\wpr.exe" -start GeneralProfile -filemode -recordtempto c:\tracetmp
        "C:\Program Files (x86)\Windows Kits\10\Windows Performance Toolkit\wpr.exe" -status

    - task: DownloadPipelineArtifact@1
      inputs:
        artifactName: 'yarn-$(VM_IMAGE)'
        targetPath: '$(YARN_CACHE_FOLDER)'

    - task: NodeTool@0
      inputs:
        versionSpec: 10.x
      displayName: 'Install Node 10.x'

    - bash: yarn config set registry https://registry.npmjs.org/ --global

    - script: yarn --frozen-lockfile
      displayName: 'Run yarn'

    - script: mkdir trace
    - script: |
        "C:\Program Files (x86)\Windows Kits\10\Windows Performance Toolkit\wpr.exe" -stop trace\trace.etl
    - task: PublishPipelineArtifact@0
      inputs:
        artifactName: 'trace-$(VM_IMAGE)'
        targetPath: 'trace'
